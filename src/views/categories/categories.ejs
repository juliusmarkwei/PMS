<div>
    <div class="bg-[#c05bc6] text-white py-4 text-center">
        <h1 class="text-4xl font-bold">Manage Product Categories Console</h1>
        <p class="mt-4">Organize, Manage, and Grow Your Products</p>
    </div>

    <!-- Table for Categories -->
    <div class="overflow-x-auto bg-white shadow-md rounded-lg w-full">
        <table class="min-w-full table-auto px-4">
            <thead class="bg-gray-200">
                <tr>
                    <th
                        class="px-8 py-4 text-left text-base font-semibold text-gray-700"
                    >
                        #
                    </th>
                    <th
                        class="px-8 py-4 text-left text-base font-semibold text-gray-700"
                    >
                        Name
                    </th>
                    <th
                        class="px-8 py-4 text-left text-base font-semibold text-gray-700"
                    >
                        Description
                    </th>
                    <th
                        class="px-8 py-4 text-left text-base font-semibold text-gray-700"
                    >
                        Actions
                    </th>
                </tr>
            </thead>
            <tbody class="text-gray-600">
                <% categories.forEach(function(category, index) { %>
                <tr class="hover:bg-[#f4e8fa] transition-all">
                    <td class="px-8 py-6 text-base"><%= index + 1 %></td>
                    <td class="px-8 py-6 text-base font-semibold">
                        <%= category.name %>
                    </td>
                    <td class="px-8 py-6 text-base line-clamp-3">
                        <%= category.description %>
                    </td>
                    <td class="px-8 py-6 text-base relative">
                        <svg
                            xmlns="http://www.w3.org/2000/svg"
                            fill="none"
                            viewBox="0 0 24 24"
                            stroke-width="1.5"
                            stroke="currentColor"
                            class="size-6 cursor-pointer"
                            onclick="toggleActions(event)"
                        >
                            <path
                                stroke-linecap="round"
                                stroke-linejoin="round"
                                d="M12 6.75a.75.75 0 1 1 0-1.5.75.75 0 0 1 0 1.5ZM12 12.75a.75.75 0 1 1 0-1.5.75.75 0 0 1 0 1.5ZM12 18.75a.75.75 0 1 1 0-1.5.75.75 0 0 1 0 1.5Z"
                            />
                        </svg>
                        <div
                            class="action-list hidden -top-10 right-36 absolute mt-2 w-32 bg-white border border-gray-200 shadow-lg rounded-md z-20"
                        >
                            <a
                                class="edit-btn text-blue-500 text-base hover:text-[#242847] w-full px-4 py-2 text-left flex items-center gap-2 cursor-pointer"
                                onclick="openEditModal('<%= category._id %>', '<%= escape(category.name) %>', '<%= escape(category.description) %>')"
                            >
                                <svg
                                    xmlns="http://www.w3.org/2000/svg"
                                    fill="none"
                                    viewBox="0 0 24 24"
                                    stroke-width="1.5"
                                    stroke="currentColor"
                                    class="size-4"
                                >
                                    <path
                                        stroke-linecap="round"
                                        stroke-linejoin="round"
                                        d="m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10"
                                    />
                                </svg>
                                Edit
                            </a>
                            <a
                                class="delete-btn text-red-600 hover:text-red-800 w-full px-4 py-2 text-left flex items-center gap-2 cursor-pointer"
                                onclick="deleteCategory('<%= category._id %>')"
                            >
                                <svg
                                    xmlns="http://www.w3.org/2000/svg"
                                    fill="none"
                                    viewBox="0 0 24 24"
                                    stroke-width="1.5"
                                    stroke="currentColor"
                                    class="size-4"
                                >
                                    <path
                                        stroke-linecap="round"
                                        stroke-linejoin="round"
                                        d="m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0"
                                    />
                                </svg>
                                Delete
                            </a>
                        </div>
                    </td>
                </tr>
                <% }); %>
            </tbody>
        </table>
    </div>

    <% if (categories.length === 0) { %>
    <div class="text-center text-gray-600 mt-12">
        <p class="text-xl">No categories found.</p>
        <a
            href="/categories/new"
            class="mt-4 inline-block bg-[#c05bc6] text-white px-4 py-2 rounded hover:bg-[#b949bf] transition-colors"
        >
            Create First Category
        </a>
    </div>
    <% } %>

    <!-- Modal for Editing Book -->
    <div
        id="editModal"
        class="fixed inset-0 bg-black bg-opacity-50 hidden flex items-center justify-center z-100"
    >
        <div class="bg-white rounded-lg w-[500px] p-5">
            <h2 class="text-3xl font-semibold text-center mb-6 text-[#242847]">
                Edit Book
            </h2>
            <form id="editCategoryForm">
                <input type="hidden" id="editCategoryId" />
                <div class="mb-6">
                    <label
                        for="editName"
                        class="block text-[#242847] mb-2 text-base"
                    >
                        Name
                    </label>
                    <input
                        type="text"
                        id="editName"
                        required
                        class="w-full p-2 border border-[#242847] rounded-md text-base focus:outline-none focus:ring focus:ring-[#c05bc6]"
                    />
                </div>
                <div class="mb-6">
                    <label
                        for="editDescription"
                        class="block text-[#242847] mb-2 text-base"
                    >
                        Description
                    </label>
                    <textarea
                        id="editDescription"
                        required
                        class="w-full p-2 border border-[#242847] rounded-md text-base focus:outline-none focus:ring focus:ring-[#c05bc6]"
                        rows="4"
                    ></textarea>
                </div>
                <div class="flex justify-end space-x-6">
                    <a
                        type="button"
                        onclick="closeEditModal()"
                        class="bg-[#242847] text-white p-2 cursor-pointer rounded-md text-base"
                    >
                        Cancel
                    </a>
                    <a
                        class="bg-[#c05bc6] text-white p-2 cursor-pointer rounded-md text-base"
                        onclick="handleEditBookFormSubmit(closeEditModal)"
                    >
                        Save Changes
                    </a>
                </div>
            </form>
        </div>
    </div>

    <script>
        function openEditModal(categoryId, name, description) {
            const decodedName = decodeURIComponent(name);
            const decodedDescription = decodeURIComponent(description);
            console.log(
                `decodedName: ${decodedName}, decodedDescription: ${decodedDescription}`
            );

            document.getElementById("editModal").classList.remove("hidden");
            document.getElementById("editCategoryId").value = categoryId;
            document.getElementById("editName").value = decodedName;
            document.getElementById("editDescription").value =
                decodedDescription;

            // Dynamically set the form action URL with the categoryId
            document.getElementById(
                "editCategoryForm"
            ).action = `/products/categories/${categoryId}`;

            document.body.classList.add("overflow-hidden");
        }

        function closeEditModal() {
            document.getElementById("editModal").classList.add("hidden");
        }

        function handleEditBookFormSubmit(closeModalFunction) {
            alert("-------------------------------");
            const categoryId = document.getElementById("editCategoryId").value;
            const name = document.getElementById("editName").value;
            const description =
                document.getElementById("editDescription").value;

            // Prepare the data to be sent
            const categoryData = {
                name,
                description,
            };

            // Send data to the server using fetch
            async function updateCategory(categoryId, categoryData) {
                try {
                    const response = await fetch(
                        `/products/categories/${categoryId}`,
                        {
                            method: "PUT",
                            headers: {
                                "Content-Type": "application/json",
                            },
                            body: JSON.stringify(categoryData),
                        }
                    );

                    const data = await response.json();

                    if (data.success) {
                        window.location.reload(); // Reload the page to reflect the changes
                        alert("Category updated successfully!");
                    } else {
                        alert("Error updating book.");
                    }
                } catch (error) {
                    console.error("Error:", error);
                    alert("An unexpected error occurred.");
                }
            }

            updateCategory(categoryId, categoryData);

            // Call the provided close modal function
            if (typeof closeModalFunction === "function") {
                closeModalFunction();
            }
        }

        // delete category function
        async function deleteCategory(categoryId) {
            const confirmation = confirm(
                "Are you sure you want to delete this category?"
            );

            if (confirmation) {
                try {
                    const response = await fetch(
                        `
                            /products/categories/${categoryId}`,
                        {
                            method: "DELETE",
                        }
                    );

                    if (response.ok) {
                        alert("Category deleted successfully");
                        window.location.reload();
                    } else {
                        alert("Failed to delete category, please try again");
                    }
                } catch (error) {
                    alert("Error deleting category, try again later");
                }
            }
        }

        // toggle and shows actions buttons
        let currentActionList = null;

        function toggleActions(event) {
            // Close any previously opened actionList
            if (currentActionList && currentActionList !== event.target) {
                currentActionList.classList.add("hidden");
            }

            const actionList = event.target
                .closest("td")
                ?.querySelector(".action-list");

            if (actionList) {
                actionList.classList.toggle("hidden");
                currentActionList = actionList.classList.contains("hidden")
                    ? null
                    : actionList;
            }

            // Add event listeners to close actionList on outside click or ESC key
            document.addEventListener("click", handleDocumentClick);
            document.addEventListener("keydown", handleKeyDown);
        }

        function handleDocumentClick(event) {
            if (
                currentActionList &&
                !event.target.closest(".action-list") &&
                !event.target.closest("td")
            ) {
                currentActionList.classList.add("hidden");
                currentActionList = null;
                cleanupEventListeners();
            }
        }

        function handleKeyDown(event) {
            if (event.key === "Escape" && currentActionList) {
                currentActionList.classList.add("hidden");
                currentActionList = null;
                cleanupEventListeners();
            }
        }

        function cleanupEventListeners() {
            document.removeEventListener("click", handleDocumentClick);
            document.removeEventListener("keydown", handleKeyDown);
        }
    </script>
</div>
