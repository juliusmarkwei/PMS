<div class="bg-gray-100 flex items-center justify-center h-[90dvh]">
    <div class="bg-white shadow-lg rounded-xl p-8 w-full max-w-2xl mx-4">
        <h2 class="text-3xl font-bold text-center text-gray-800 mb-8">
            New Product
        </h2>

        <form
            enctype="multipart/form-data"
            id="productUploadForm"
            method="POST"
            action="/products/create"
            class="space-y-6"
        >
            <!-- Product Name and Price -->
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                    <label
                        for="productName"
                        class="block text-gray-700 font-semibold mb-2"
                    >
                        Name
                    </label>
                    <input
                        type="text"
                        id="productName"
                        name="name"
                        required
                        class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#c05bc6] transition duration-300"
                        placeholder="Enter product name"
                    />
                </div>
                <div>
                    <label
                        for="productPrice"
                        class="block text-gray-700 font-semibold mb-2"
                    >
                        Price (Â¢)
                    </label>
                    <input
                        type="number"
                        id="productPrice"
                        name="price"
                        step="0.01"
                        min="0"
                        required
                        class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#c05bc6] transition duration-300"
                        placeholder="Enter product price"
                    />
                </div>
            </div>

            <!-- Product Description -->
            <div>
                <label
                    for="productDescription"
                    class="block text-gray-700 font-semibold mb-2"
                >
                    Description
                </label>
                <textarea
                    id="productDescription"
                    name="description"
                    rows="4"
                    required
                    class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#c05bc6] transition duration-300 resize-none"
                    placeholder="Describe your product..."
                ></textarea>
            </div>

            <!-- Product Image -->
            <div>
                <label
                    for="productImage"
                    class="block text-gray-700 font-semibold mb-2"
                >
                    Image
                </label>
                <div class="flex items-center justify-center w-full">
                    <label
                        id="previewContainer"
                        for="productImage"
                        class="flex flex-col border-4 border-dashed border-gray-300 hover:bg-gray-100 hover:border-[#c05bc6] group relative w-full p-6 text-center cursor-pointer rounded-lg transition duration-300"
                    >
                        <div class="flex flex-col items-center justify-center">
                            <svg
                                class="w-12 h-12 text-gray-400 group-hover:text-[#c05bc6] transition"
                                fill="none"
                                stroke="currentColor"
                                viewBox="0 0 24 24"
                                xmlns="http://www.w3.org/2000/svg"
                            >
                                <path
                                    stroke-linecap="round"
                                    stroke-linejoin="round"
                                    stroke-width="2"
                                    d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"
                                ></path>
                            </svg>
                            <p
                                class="text-sm text-gray-500 group-hover:text-[#c05bc6] mt-2 transition"
                            >
                                Click to upload
                            </p>
                        </div>
                    </label>
                    <input
                        type="file"
                        id="productImage"
                        name="productImage"
                        accept="image/*"
                        class="hidden"
                        required
                    />
                </div>
            </div>

            <!-- Product Category and Stock -->
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                    <label
                        for="productCategory"
                        class="block text-gray-700 font-semibold mb-2"
                    >
                        Category
                    </label>
                    <select
                        id="productCategory"
                        name="categoryId"
                        required
                        class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#c05bc6] transition duration-300"
                    >
                        <option value="">Select a category</option>
                    </select>
                </div>
                <div>
                    <label
                        for="productStock"
                        class="block text-gray-700 font-semibold mb-2"
                    >
                        Stock Quantity
                    </label>
                    <input
                        type="number"
                        id="productStock"
                        name="stock"
                        min="0"
                        required
                        class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#c05bc6] transition duration-300"
                        placeholder="Enter stock quantity"
                    />
                </div>
            </div>

            <!-- Submit Button -->
            <div class="flex items-center justify-end">
                <button
                    type="submit"
                    class="bg-[#c05bc6] text-white px-6 py-2 rounded-lg hover:bg-[#b949bf] focus:outline-none focus:ring-2 focus:ring-[#c05bc6] focus:ring-opacity-50 transition duration-300 transform hover:-translate-y-1 hover:shadow-lg"
                >
                    Create
                </button>
            </div>
        </form>
    </div>

    <!-- JavaScript -->
    <script>
        const imageUpload = document.getElementById("productImage");
        const previewContainer = document.getElementById("previewContainer");

        // Custom click handling for file upload
        imageUpload.addEventListener("change", () => {
            const file = imageUpload.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = (e) => {
                    const preview = document.createElement("img");
                    preview.src = e.target.result;
                    preview.alt = "Product Image Preview";
                    preview.classList.add(
                        "h-full",
                        "w-full",
                        "object-cover",
                        "rounded-lg"
                    );

                    // Clear any previous preview
                    previewContainer.innerHTML = "";
                    previewContainer.appendChild(preview);
                };
                reader.readAsDataURL(file);
            }
        });

        // get category list to be displayed under category options
        const refinedCategories = [];

        const getRefinedCategoryList = async () => {
            try {
                const response = await fetch("/products/categories/refined", {
                    method: "GET",
                });

                if (!response.ok)
                    throw new Error("Failed to fetch categories.");

                const data = await response.json();
                if (!data.categories)
                    throw new Error("Unexpected API response format.");

                refinedCategories.push(...data.categories);
                populateCategoryDropdown();
            } catch (error) {
                console.error(error.message);
                alert("Error fetching category list. Please try again later!");
            }
        };

        const populateCategoryDropdown = () => {
            const categorySelect = document.getElementById("productCategory");
            categorySelect.innerHTML = ""; // Clear existing options

            // Create a default "Select a category" option
            const defaultOption = document.createElement("option");
            defaultOption.value = "";
            defaultOption.textContent = "Select a category";
            categorySelect.appendChild(defaultOption);

            // Add options from the refinedCategories array
            refinedCategories.forEach((category) => {
                const option = document.createElement("option");
                option.value = category.id;
                option.textContent = category.name;
                categorySelect.appendChild(option);
            });
        };

        // Initialize fetching categories when the script loads
        getRefinedCategoryList();
    </script>
</div>
